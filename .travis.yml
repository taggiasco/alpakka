language: scala

sudo: false

scala:
  - "2.11.11"
  - "2.12.2"

jdk:
  - oraclejdk8

services:
  - docker

before_install:
  - docker-compose up -d

script:
  - sbt -J-XX:ReservedCodeCacheSize=128m ++$TRAVIS_SCALA_VERSION ";test:compile;docs/paradox"
  # make 'git branch' work again
  - git branch -f "$TRAVIS_BRANCH" && git checkout "$TRAVIS_BRANCH"
  # check unformatted code
  - git diff --exit-code --color || { echo "[error] Unformatted code found. Please run 'test:compile' and commit the reformatted code."; false; } && sbt -J-XX:ReservedCodeCacheSize=128m ++$TRAVIS_SCALA_VERSION ";test"
  # check policies, if on master also upload
  - if [[ "$TRAVIS_BRANCH" == "master" && "$TRAVIS_EVENT_TYPE" == "push" ]]; then sbt 'set credentials += Credentials("whitesource", "whitesourcesoftware.com", "", System.getenv("WHITESOURCE_KEY"))' whitesourceCheckPolicies whitesourceUpdate; else sbt 'set credentials += Credentials("whitesource", "whitesourcesoftware.com", "", System.getenv("WHITESOURCE_KEY"))' whitesourceCheckPolicies; fi

after_failure:
  - docker-compose logs mqtt

before_cache:
  - find $HOME/.ivy2 -name "ivydata-*.properties" -print -delete
  - find $HOME/.sbt  -name "*.lock"               -print -delete

cache:
  directories:
    - $HOME/.ivy2/cache
    - $HOME/.sbt/boot

deploy:
  provider: script
  script:
    - sbt -J-XX:ReservedCodeCacheSize=128m ++$TRAVIS_SCALA_VERSION publish && curl -I https://ci.lightbend.com/job/techhub-publisher/build?token=$TECH_HUB_TOKEN
  on:
    tags: true
    repo: akka/alpakka
    condition: $AKKA_SERIES = 2.4

env:
  matrix:
    - AKKA_SERIES=2.4
    - AKKA_SERIES=2.5
  global:
    # encrypt with: travis encrypt WHITESOURCE_KEY=...
    - secure: "JcoxWiNmC0EEdl2KhEx4O8YNy/P2Mvk5fjqC700ClHPiYEsyr+3baNQGmj3AQcpjIgxvHso/8zeFsGJWKnYD3E0vn+J/6urld8vLZprQX/FPKFZgIpIKBgNogQa5V8o2mQSco72t8n1kkFLf6TNZR0T+1cmYz0himcn71rhgwqCtVDrW7zfHgXpbL67FKDUIvfVikdVMBVvcxiZHFIkHUC576LKz24wQYfbnCROGQV7uXFhYNjH0s1HXh6VzUWfEx/PuXEiXnsXSkG8jw0C6ELguLHChJqhsLVC5CaT+DHAs2YeZB04ncX17OwAYNy2RwCgSPCMSnCprBWR2QFqT9C2YZmPrlR9hHgUisHmuydLpRN7aN9BCLpLJk5jGZTwYLyabgzpSbs0SAgqSFgMp+WaWX+WhKMcrhNZvKAuz3n/lgOO6s1pZ0gCTsLtjOIfDLgjY7LxzWykDftwbyVg5OfGI9jv1eYHp3T9GWQ44KTckcQwyzfE5433MUHYk+f0eMjcxWq46rAAuc8BEpEO42+O9iHb+p2kvLUswjpVxy0+SOnxAgJYtrCm4kF8tRCFcBvC/Nim6SzOhyl2dKYMS9BVpBTe4hOMuS5xjfh1wly4TsToByg77C0o2AbW0PhhgujapRgDKcv8Qu6RC599UBthj9tTkGdctW8CCm2YZbTg="
    # encrypt with: travis encrypt BINTRAY_USER=...
    - secure: "DLc1v2XMWrxtbPzVfoArkSQiwzT+O7/rwT7APqoA68K5A1pwxDw5BD3sOLpd6rKbPBulmwDAAQ1am3uE6lbmymCTMe8bvA3iHWy0Jg8baK4nC46EKFLabQz4Uaoq/bs92YGW1QH12rbBPyTA7uvPpvhmb8uyUbJqjT3uyROqHhHfhll89dsPVaK0NCY9DN2K356M87z7cp1SvtfAiF8qaNjNmlOfWjIEUSO1SiiqQBjT/GJvhrrW32J4htf5CqEEYBSoN+fqTCwwdo3GpOFFq+Zh5TSoyvKyi5xo+LVq0hW2SAYTHMMB5WhLd1cvQ0bvK6FpUhyfMcON/8ad3R7paNVxLpIGEu8hsUYGsENjdXaEK4g1TurDeVekWJRYyGMCmy2cCg5yHC+Pb56qOgpM7gmZACCitLap1jXUCWI27q+7cvxuxaBb6EPiDuWGNQXHH+OkbD/s4RJO3kQfv1Si64RON8+bZ+fqOWLK+BuakYi3YMukFgPngQozX3aMZOVcEBKJZtquwewCKsNV2VGItJxrp3MDol0HhuNvdUvIf5UydZZCyJTo1DBsK49yDUj7iKOEJk5Qc5oYfEhSEKcGRZs8Yl9n/kIJUh8ZYTT+35rwD27dHgsEkPkCEGpbMP/r0JewkWH7q9FfajPIYOlEpoP6tCsdP4mBOyF1uZH7omM="
    # encrypt with: travis encrypt BINTRAY_PASS=...
    - secure: "gasjgT+qHUFPe/eMqvwD7WtzQmNw++LXmmQ6ic6VJOf/drAQckdeXIaa3rOsuoiI72xtngIUPil61+bviRf3Qgw061w65dSlrn4Pm1c4f4kOCRBQCpsg06PK2Xs40ZD/9l9e+3N0T6alwx//PFH+bUB5yEi7y/Qs1dOKtofvvtoTkGvF6GZDCMiKwpYmcEKmBbmEuyaFLd5h1N6oJ53g7dtyh1KD9gU4HXmc3QujrKSxm3YunMf68wgtTJWZf3b/OcyVTSz7/8mbvJ++GWCyVK5B8snAnKxwSNHhYysNdOoOTGhwF2dnE38Vr/NXldHnm+M2LzuBBADXLmxlW92bxv+IjuAT+HtBoPEP9I+f/eJqfirkrMRWiylWN7zcchMzHTHS54qx1JvtRyJYNFsOfzqLry/IUZoT/1tLe2vPCRE601K5pS2GEDAt/gj3BTCWpCvidgXXq4KPlj5IqeIJ5UVWSpjCCH0hZUwuUUwgSNTXFg7Ug+U4U5DjPmyla5oNj9d+RIGqWtsixB8QAs5dCgtBa0om/f8nT584iHjrpvduLpoUpUcMPyPgcJnlHNvKawnEW0JCcMxR4fJBsG3IG+6Q6Rbo17VIs/Z5hgcNQtJMVnjiIGfOFBQKYKrStAWlJWK9WTo5L5oO3sn+BZQUnuJxafoJsdArEogzfbRjovk="
    # encrypt with travis encrypt TECH_HUB_TOKEN=...
    - secure: "fYD0u+ipZj7h8QIwZrhXmdp4SteHxa2Er924Qm8y1KQj67mkGTrwjJaSQCv2H69HDRdfg2po4M2MuQixF0hh4amZTd388ulR+1LhAid2EZPZ5aICWaqTYUa63HMQ7zhGqAN+2bMXnOKEeJYV9LrSDZ+Ki0FpdIPdSIbYbx1KZ9DAABdi25p9XSD21/ZOajEzSiobHw9lQLQTbaMHGsY3LA1UT8/v5j3ykfTjKd3pKtqFcVeijMRA7BDPrSUvXS62dsBnZ1CS6htV621BBYox/9dzI//P6ht9U/i3gdRDHmPEmdXlB2Jooo+u8PCpHBFxTnsOhSf84KNq7888iu3dqPtqAQPL2v+eUR1oqzUXhOjUIhqSPkZWhMyDEH2SRJDn51dGDXg2coBnPLJlnkHiOS5rikejAGUNRDPIq9Xo8izyvuy3lAGtzDoO1CppFmqbk6wyapYr8WUp8wMBeuy98ENHzYVjlGWALBr2OttpkKdwGtQQEL2agzmqUTPCxV32YAv6FYhfIyu6u309tkn0lbSdPEZvr+oyNeVKCwpY5/wSzkSNcwwbk4/Jrh02T16iNv9lc/GnzSnVqdyNiJPDuIojIOAF4mY3jVrGeaefRArJGkfoA0SrMZOLsn1nX2XnuWeDPKLMJ2ki/4yeijJJIJpuYzHNoHDJhdNllZ+rQuQ="
